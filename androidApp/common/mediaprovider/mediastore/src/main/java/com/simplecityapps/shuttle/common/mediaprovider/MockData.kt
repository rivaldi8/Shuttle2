package com.simplecityapps.shuttle.common.mediaprovider

import com.simplecityapps.shuttle.model.MediaProviderType
import com.simplecityapps.shuttle.model.Song
import com.simplecityapps.shuttle.model.SongData
import kotlinx.datetime.Clock
import kotlin.random.Random

object MockData {
    val songData = listOf(
        SongData(
            name = "All the Love in the World",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 1,
            disc = 1,
            duration = 315000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "You Know What You Are?",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 2,
            disc = 1,
            duration = 222000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "The Collector",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 3,
            disc = 1,
            duration = 188000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "The Hand Tht Feeds",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 4,
            disc = 1,
            duration = 212000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Love Is Not Enough",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 5,
            disc = 1,
            duration = 241000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Every Day Is Exactly The Same",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 6,
            disc = 1,
            duration = 295000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ), SongData(
            name = "With Teeth",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 7,
            disc = 1,
            duration = 338000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Only",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 8,
            disc = 1,
            duration = 263000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Getting Smaller",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 9,
            disc = 1,
            duration = 215000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Sunspots",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 10,
            disc = 1,
            duration = 243000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "The Line Begins to Blur",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 11,
            disc = 1,
            duration = 224000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Beside You In Time",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 12,
            disc = 1,
            duration = 325000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        ),
        SongData(
            name = "Right Where it Belongs",
            albumArtist = "Nine Inch Nails",
            artists = listOf("Nine Inch Nails"),
            album = "With Teeth",
            track = 13,
            disc = 1,
            duration = 304000,
            date = null,
            genres = emptyList(),
            path = "",
            size = null,
            mimeType = null,
            dateModified = null,
            lastPlayed = null,
            lastCompleted = null,
            externalId = null,
            mediaProvider = MediaProviderType.MediaStore,
            replayGainTrack = null,
            replayGainAlbum = null,
            lyrics = null,
            grouping = null,
            bitRate = null,
            sampleRate = null,
            channelCount = null,
            composer = null
        )
    )

    val songs = songData.map { it.toSong() }
}

fun SongData.toSong(): Song {
    return Song(
        id = Random.nextLong(),
        name = name,
        albumArtist = albumArtist,
        artists = artists,
        album = album,
        track = track,
        disc = disc,
        duration = duration,
        date = date,
        genres = genres,
        path = path,
        size = size,
        mimeType = mimeType,
        dateModified = dateModified,
        lastPlayed = lastPlayed,
        lastCompleted = lastCompleted,
        playCount = 0,
        playbackPosition = 0,
        blacklisted = false,
        externalId = externalId,
        mediaProvider = mediaProvider,
        replayGainTrack = replayGainTrack,
        replayGainAlbum = replayGainAlbum,
        lyrics = lyrics,
        grouping = grouping,
        bitRate = bitRate,
        sampleRate = sampleRate,
        channelCount = channelCount,
        composer = composer,
        dateAdded = Clock.System.now()
    )
}